// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SpotifyHelper.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\janzi\source\repos\SpotifyHelper\SpotifyHelper\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\janzi\source\repos\SpotifyHelper\SpotifyHelper\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\janzi\source\repos\SpotifyHelper\SpotifyHelper\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\janzi\source\repos\SpotifyHelper\SpotifyHelper\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\janzi\source\repos\SpotifyHelper\SpotifyHelper\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\janzi\source\repos\SpotifyHelper\SpotifyHelper\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\janzi\source\repos\SpotifyHelper\SpotifyHelper\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\janzi\source\repos\SpotifyHelper\SpotifyHelper\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\janzi\source\repos\SpotifyHelper\SpotifyHelper\_Imports.razor"
using SpotifyHelper;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\janzi\source\repos\SpotifyHelper\SpotifyHelper\_Imports.razor"
using SpotifyHelper.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\janzi\source\repos\SpotifyHelper\SpotifyHelper\Pages\Songs.razor"
using SpotifyAPI.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\janzi\source\repos\SpotifyHelper\SpotifyHelper\Pages\Songs.razor"
using Swan;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/songs")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/songs/{SongId}")]
    public partial class Songs : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 153 "C:\Users\janzi\source\repos\SpotifyHelper\SpotifyHelper\Pages\Songs.razor"
       

    [ParameterAttribute]
    public string SongId { get; set; }

    public string ErgebnisJson { get; set; }
    public string Genres { get; set; }
    public FullTrack FullTrack { get; set; }
    public List<Image> Bilder { get; set; } = new();
    public List<FullArtist> Artists { get; set; } = new();
    public TrackAudioFeatures SongFeatures { get; set; }


    protected override void OnParametersSet()
    {
        if (string.IsNullOrEmpty(SongId)) return;
        if (SongId.Length > 22)
        {
            SongId = SongId.Replace("https://open.spotify.com/track/", "").Substring(0, 22);
        }
        RufeInformationenFürSongAb();
    }

    private async void RufeInformationenFürSongAb()
    {
        try
        {
            if (SongId?.Length > 22)
            {
                SongId = SongId.Replace("https://open.spotify.com/track/", "").Substring(0, 22);
            }

            FullTrack = await Spotify.Tracks.Get(SongId);
            SongFeatures = await Spotify.Tracks.GetAudioFeatures(SongId);

            Bilder.Clear();

            Bilder.Add(FullTrack.Album.Images.FirstOrDefault());
            ErgebnisJson = FullTrack.Stringify();
            var artistsIds = FullTrack.Artists.Select(a => a.Id);
            Artists = Spotify.Artists.GetSeveral(new ArtistsRequest(artistsIds.ToList())).Result.Artists;
            Bilder.AddRange(Artists.Select(a => a.Images.FirstOrDefault()));
            var genres = Artists.SelectMany(a => a.Genres);
            Genres = string.Join(",", genres.Distinct());
        }
        catch (Exception e)
        {
            ErgebnisJson = e.Message;
        }
        StateHasChanged();
    }





#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private SpotifyClient Spotify { get; set; }
    }
}
#pragma warning restore 1591
