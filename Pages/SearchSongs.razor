@page "/searchsongs"
@using SpotifyAPI.Web
@inject SpotifyClient _spotify

<MudTextField @bind-Value="SearchText" Label="Suche nach Songs" Variant="Variant.Filled" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" />

@if (SearchResp != null)
{
    <div class="row">
        <div class="col">
            <div class="form-group">
                <table class="table table-hover table-dark">
                    <thead>
                        <tr>
                            <th scope="col">Name</th>
                            <th scope="col">Preview</th>
                            <th scope="col">Bekanntheit</th>
                            <th scope="col">Link</th>
                        </tr>
                    </thead>
                    <tbody>
                    @if (SearchResp?.Tracks.Items != null)
                    {
                        foreach (var result in SearchResp?.Tracks.Items.OrderByDescending(t => t.Popularity))
                        {
                            <tr>
                                <td>@result.Name</td>
                                <td>
                                    <audio id="audio_with_controls" controls src="@result.PreviewUrl" type="audio/mp3"></audio>
                                </td>
                                <td>@result.Popularity%</td>
                                <td>
                                    <a href="/Songs/@result.Id">Link</a>
                                </td>
                            </tr>
                        }
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

@code {
    private string _searchText;
    public string SearchText
    {
        get { return _searchText; }
        set
        {
            _searchText = value;
            if (!string.IsNullOrWhiteSpace(value))
            {
                SearchResp = _spotify.Search.Item(new SearchRequest(SearchRequest.Types.Track, value)).Result;
            }
        }
    }
    public SearchResponse SearchResp { get; set; }
}