@page "/album"
@page "/album/{AlbumId}"
@using SpotifyAPI.Web
@inject SpotifyClient Spotify
@inject NavigationManager NavManager

<style>
    .albumCover {
        position: absolute;
        right: 10px;
        top: 10px;
        border-radius: 8px;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.5);
    }
    </style>

<h3>Album</h3>
@if (FullAlbum?.Images.FirstOrDefault()?.Url != null)
{
    <img class="albumCover" height="250" width="250" src="@FullAlbum.Images.FirstOrDefault()?.Url" alt="Logo"/>
}
<div class="row">
    <div class="col-10">
        <div class="form-group">
            <label for="albumId">Album ID:</label>
            <input type="text" class="form-control" id="albumId" aria-describedby="albumId" placeholder="Gib eine Album ID ein..." @bind-value="AlbumId">
        </div>
    </div>
</div>
<div class="row">
    <div class="col-10">
        <div class="form-group">
            <label for="nameTxt">Name:</label>
            <input value="@FullAlbum?.Name" type="text" readonly="readonly" class="form-control" id="nameTxt" placeholder="Albumname">
        </div>
    </div>
</div>

@if (FullAlbum?.Tracks.Items != null)
{
    <h2 style="margin-top: 15px;">Tracks</h2>
    <table class="table table-hover table-dark">
        <thead>
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Explicit</th>
                <th scope="col">Dauer</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var track in FullAlbum.Tracks.Items)
            {
                <tr @onclick="() => ShowTrack(track)">
                    <td>@track.Name</td>
                    <td>@(track.Explicit ? "Explicit" : "")</td>
                    <td>@track.DurationMs ms</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    [ParameterAttribute]
    public string AlbumId { get; set; }
    public FullAlbum FullAlbum { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(AlbumId))
        {
            FullAlbum = await Spotify.Albums.Get(AlbumId);
        }
        StateHasChanged();
    }

    private void ShowTrack(SimpleTrack track)
    {
        NavManager.NavigateTo($"songs/{track.Id}");
    }

}
